{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nlet pickedTime;\nconst startBtn = document.querySelector(`[data-start]`);\nstartBtn.disabled = true;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    pickedTime = selectedDates[0];\n    startBtn.disabled = false;\n    if (pickedTime < Date.now()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        backgroundColor: '#ef4040',\n        position: 'topCenter',\n      });\n      startBtn.disabled = true;\n    }\n  },\n};\nconst input = document.querySelector('#datetime-picker');\nflatpickr(input, options);\n\nconst timer = document.querySelector(`.field`);\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\nlet intervalId;\n\nstartBtn.addEventListener(`click`, () => {\n  startBtn.disabled = true;\n  input.disabled = true;\n  const initTime = Date.now();\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const difference = pickedTime - currentTime;\n    const timeObject = convertMs(difference);\n    document.querySelector(`[data-days]`).textContent = addLeadingZero(\n      timeObject.days\n    );\n    document.querySelector(`[data-hours]`).textContent = addLeadingZero(\n      timeObject.hours\n    );\n    document.querySelector(`[data-minutes]`).textContent = addLeadingZero(\n      timeObject.minutes\n    );\n    document.querySelector(`[data-seconds]`).textContent = addLeadingZero(\n      timeObject.seconds\n    );\n    if (difference < 1000) {\n      clearInterval(intervalId);\n    }\n  }, 1000);\n});\n"],"names":["pickedTime","startBtn","options","selectedDates","iziToast","input","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","intervalId","currentTime","difference","timeObject"],"mappings":"2GAIA,IAAIA,EACJ,MAAMC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GACpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAaG,EAAc,CAAC,EAC5BF,EAAS,SAAW,GAChBD,EAAa,KAAK,QACpBI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,gBAAiB,UACjB,SAAU,WAClB,CAAO,EACDH,EAAS,SAAW,GAEvB,CACH,EACMI,EAAQ,SAAS,cAAc,kBAAkB,EACvDC,EAAUD,EAAOH,CAAO,EAEV,SAAS,cAAc,QAAQ,EAC7C,SAASK,EAAUC,EAAI,CAOrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CACA,IAAIC,EAEJd,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBI,EAAM,SAAW,GAEjBU,EAAa,YAAY,IAAM,CAC7B,MAAMC,EAAc,KAAK,MACnBC,EAAajB,EAAagB,EAC1BE,EAAaX,EAAUU,CAAU,EACvC,SAAS,cAAc,aAAa,EAAE,YAAcJ,EAClDK,EAAW,IACjB,EACI,SAAS,cAAc,cAAc,EAAE,YAAcL,EACnDK,EAAW,KACjB,EACI,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EACrDK,EAAW,OACjB,EACI,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EACrDK,EAAW,OACjB,EACQD,EAAa,KACf,cAAcF,CAAU,CAE3B,EAAE,GAAI,CACT,CAAC"}